// app.component.ts
import { Component } from '@angular/core';

@Component({
  // set //
})
export class AppComponent {
  title = 'angular-example';
 
  receivedValue: string;

  handleOutputEvent(value: string):
   void {
   
    this.receivedValue = value;
  }
}

// pipe //
import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'uppercase',
})

export class UppercasePipe implements PipeTransform {
  transform(value: string): string {
    return value.toUpperCase();
  }
}

//directives//
import { Directive, ElementRef, Renderer2, Input } from '@angular/core';

@Directive({
  selector: '[appCustomDirective]',
})
export class CustomDirective {
  @Input() inputValue: string;

  constructor(private el: ElementRef, private renderer: Renderer2) {}

  ngOnChanges(): void {
    this.renderer.setStyle(
      this.el.nativeElement,
      'font-weight',
      this.inputValue.length > 10 ? 'bold' : 'normal'
    );
  }
}

//component//
import { Component, Input, Output, EventEmitter } from '@angular/core';

@Component({
  selector: 'app-custom-component',
  template: `
    <p>{{ inputValue }}</p>
    <button (click)="sendOutputEvent()">Send to App Component</button>
  `,
})
export class CustomComponent {
  @Input() inputValue: string;
  @Output() outputEvent = new EventEmitter<string>();

  sendOutputEvent(): void {
    this.outputEvent.emit('Message from Custom Component');
  }
}

//component communication//
import { NgModule } from '@angular/core';

import { BrowserModule } from '@angular/platform-browser';

import { AppComponent } from './app.component';
   

import { UppercasePipe } from './uppercase.pipe';
    import { CustomDirective } from './custom.directive';
   import { CustomComponent } from './custom.component';

     @NgModule({
  declarations: [
    AppComponent,
   
    UppercasePipe,
    CustomDirective,
    CustomComponent,
  ],
  imports: [BrowserModule],
 
  bootstrap: [AppComponent],
   })
    
   export class AppModule {}